// <auto-generated />
using System;
using Absence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Absence.Migrations
{
    [DbContext(typeof(AbsenceDbContext))]
    [Migration("20250110212708_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Absence.Models.T_Classe", b =>
                {
                    b.Property<int>("CodeClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeClasse"));

                    b.Property<int>("CodeDepartement")
                        .HasColumnType("int");

                    b.Property<int>("CodeGroupe")
                        .HasColumnType("int");

                    b.Property<string>("NomClasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeClasse");

                    b.HasIndex("CodeDepartement");

                    b.HasIndex("CodeGroupe");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            CodeClasse = 1,
                            CodeDepartement = 1,
                            CodeGroupe = 1,
                            NomClasse = "Classe 1"
                        },
                        new
                        {
                            CodeClasse = 2,
                            CodeDepartement = 2,
                            CodeGroupe = 1,
                            NomClasse = "Classe 2"
                        },
                        new
                        {
                            CodeClasse = 3,
                            CodeDepartement = 2,
                            CodeGroupe = 2,
                            NomClasse = "Classe 3"
                        },
                        new
                        {
                            CodeClasse = 4,
                            CodeDepartement = 3,
                            CodeGroupe = 2,
                            NomClasse = "Classe 4"
                        },
                        new
                        {
                            CodeClasse = 5,
                            CodeDepartement = 3,
                            CodeGroupe = 3,
                            NomClasse = "Classe 5"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Departement", b =>
                {
                    b.Property<int>("CodeDepartement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeDepartement"));

                    b.Property<string>("NomDepartement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeDepartement");

                    b.ToTable("Departements");

                    b.HasData(
                        new
                        {
                            CodeDepartement = 1,
                            NomDepartement = "Departement 1"
                        },
                        new
                        {
                            CodeDepartement = 2,
                            NomDepartement = "Departement 2"
                        },
                        new
                        {
                            CodeDepartement = 3,
                            NomDepartement = "Departement 3"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Enseignant", b =>
                {
                    b.Property<int>("CodeEnseignant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeEnseignant"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeDepartement")
                        .HasColumnType("int");

                    b.Property<int>("CodeGrade")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRecrutement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeEnseignant");

                    b.HasIndex("CodeDepartement");

                    b.HasIndex("CodeGrade");

                    b.ToTable("Enseignants");

                    b.HasData(
                        new
                        {
                            CodeEnseignant = 1,
                            Adresse = "Adresse Enseignant",
                            CodeDepartement = 1,
                            CodeGrade = 1,
                            DateRecrutement = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "teacher@gmail.com",
                            Nom = "Richard",
                            Password = "0000",
                            Prenom = "Roe",
                            Tel = "87654321"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Etudiant", b =>
                {
                    b.Property<int>("CodeEtudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeEtudiant"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeClasse")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeEtudiant");

                    b.HasIndex("CodeClasse");

                    b.ToTable("Etudiants");

                    b.HasData(
                        new
                        {
                            CodeEtudiant = 1,
                            Adresse = "Adresse Etudiant",
                            CodeClasse = 1,
                            DateNaissance = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "student@gmail.com",
                            Nom = "John",
                            NumInscription = "12345",
                            Password = "0000",
                            Prenom = "Doe",
                            Tel = "12345678"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_FicheAbsence", b =>
                {
                    b.Property<int>("CodeFicheAbsence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeFicheAbsence"));

                    b.Property<int>("CodeClasse")
                        .HasColumnType("int");

                    b.Property<int>("CodeEnseignant")
                        .HasColumnType("int");

                    b.Property<int>("CodeMatiere")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateJour")
                        .HasColumnType("datetime2");

                    b.HasKey("CodeFicheAbsence");

                    b.HasIndex("CodeClasse");

                    b.HasIndex("CodeEnseignant");

                    b.HasIndex("CodeMatiere");

                    b.ToTable("FichesAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_FicheAbsenceSeance", b =>
                {
                    b.Property<int>("CodeFicheAbsence")
                        .HasColumnType("int");

                    b.Property<int>("CodeSeance")
                        .HasColumnType("int");

                    b.Property<int>("CodeFicheAbsenceSeance")
                        .HasColumnType("int");

                    b.HasKey("CodeFicheAbsence", "CodeSeance");

                    b.HasIndex("CodeSeance");

                    b.ToTable("FicheAbsenceSeances");
                });

            modelBuilder.Entity("Absence.Models.T_Grade", b =>
                {
                    b.Property<int>("CodeGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGrade"));

                    b.Property<string>("NomGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeGrade");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            CodeGrade = 1,
                            NomGrade = "Grade 1"
                        },
                        new
                        {
                            CodeGrade = 2,
                            NomGrade = "Grade 2"
                        },
                        new
                        {
                            CodeGrade = 3,
                            NomGrade = "Grade 3"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Groupe", b =>
                {
                    b.Property<int>("CodeGroupe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGroupe"));

                    b.Property<string>("NomGroupe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeGroupe");

                    b.ToTable("Groupes");

                    b.HasData(
                        new
                        {
                            CodeGroupe = 1,
                            NomGroupe = "Groupe 1"
                        },
                        new
                        {
                            CodeGroupe = 2,
                            NomGroupe = "Groupe 2"
                        },
                        new
                        {
                            CodeGroupe = 3,
                            NomGroupe = "Groupe 3"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_LigneFicheAbsence", b =>
                {
                    b.Property<int>("CodeFicheAbsence")
                        .HasColumnType("int");

                    b.Property<int>("CodeEtudiant")
                        .HasColumnType("int");

                    b.HasKey("CodeFicheAbsence", "CodeEtudiant");

                    b.HasIndex("CodeEtudiant");

                    b.ToTable("LignesFicheAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_Matiere", b =>
                {
                    b.Property<int>("CodeMatiere")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeMatiere"));

                    b.Property<int>("NbrHeureCoursParSemaine")
                        .HasColumnType("int");

                    b.Property<int>("NbrHeureTDParSemaine")
                        .HasColumnType("int");

                    b.Property<int>("NbrHeureTPParSemaine")
                        .HasColumnType("int");

                    b.Property<string>("NomMatiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeMatiere");

                    b.ToTable("Matieres");

                    b.HasData(
                        new
                        {
                            CodeMatiere = 1,
                            NbrHeureCoursParSemaine = 2,
                            NbrHeureTDParSemaine = 1,
                            NbrHeureTPParSemaine = 0,
                            NomMatiere = "Anglais"
                        },
                        new
                        {
                            CodeMatiere = 2,
                            NbrHeureCoursParSemaine = 3,
                            NbrHeureTDParSemaine = 2,
                            NbrHeureTPParSemaine = 1,
                            NomMatiere = "Web Dev"
                        },
                        new
                        {
                            CodeMatiere = 3,
                            NbrHeureCoursParSemaine = 3,
                            NbrHeureTDParSemaine = 2,
                            NbrHeureTPParSemaine = 1,
                            NomMatiere = "SGBD"
                        },
                        new
                        {
                            CodeMatiere = 4,
                            NbrHeureCoursParSemaine = 4,
                            NbrHeureTDParSemaine = 2,
                            NbrHeureTPParSemaine = 2,
                            NomMatiere = "Programmation"
                        },
                        new
                        {
                            CodeMatiere = 5,
                            NbrHeureCoursParSemaine = 2,
                            NbrHeureTDParSemaine = 1,
                            NbrHeureTPParSemaine = 0,
                            NomMatiere = "Scrum"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Responsable", b =>
                {
                    b.Property<int>("CodeResponsable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeResponsable"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeResponsable");

                    b.ToTable("Responsables");

                    b.HasData(
                        new
                        {
                            CodeResponsable = 1,
                            Mail = "responsable@gmail.com",
                            Nom = "John",
                            Password = "0000",
                            Prenom = "Smith"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Seance", b =>
                {
                    b.Property<int>("CodeSeance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeSeance"));

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomSeance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeSeance");

                    b.ToTable("Seances");

                    b.HasData(
                        new
                        {
                            CodeSeance = 1,
                            HeureDebut = new DateTime(2025, 1, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HeureFin = new DateTime(2025, 1, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            NomSeance = "S1"
                        },
                        new
                        {
                            CodeSeance = 2,
                            HeureDebut = new DateTime(2025, 1, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            HeureFin = new DateTime(2025, 1, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NomSeance = "S2"
                        },
                        new
                        {
                            CodeSeance = 3,
                            HeureDebut = new DateTime(2025, 1, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            HeureFin = new DateTime(2025, 1, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            NomSeance = "S3"
                        },
                        new
                        {
                            CodeSeance = 4,
                            HeureDebut = new DateTime(2025, 1, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HeureFin = new DateTime(2025, 1, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            NomSeance = "S4"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("ResponsableId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@gmail.com",
                            Password = "admin",
                            UserType = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "teacher@gmail.com",
                            Password = "0000",
                            UserType = "Teacher"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "student@gmail.com",
                            Password = "0000",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "responsable@gmail.com",
                            Password = "0000",
                            UserType = "Responsable"
                        });
                });

            modelBuilder.Entity("Absence.Models.T_Classe", b =>
                {
                    b.HasOne("Absence.Models.T_Departement", "Departement")
                        .WithMany("Classes")
                        .HasForeignKey("CodeDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_Groupe", "Groupe")
                        .WithMany("Classes")
                        .HasForeignKey("CodeGroupe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Absence.Models.T_Enseignant", b =>
                {
                    b.HasOne("Absence.Models.T_Departement", "Departement")
                        .WithMany("Enseignants")
                        .HasForeignKey("CodeDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_Grade", "Grade")
                        .WithMany("Enseignants")
                        .HasForeignKey("CodeGrade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Absence.Models.T_Etudiant", b =>
                {
                    b.HasOne("Absence.Models.T_Classe", "Classe")
                        .WithMany("Etudiants")
                        .HasForeignKey("CodeClasse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("Absence.Models.T_FicheAbsence", b =>
                {
                    b.HasOne("Absence.Models.T_Classe", "Classe")
                        .WithMany("FichesAbsence")
                        .HasForeignKey("CodeClasse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_Enseignant", "Enseignant")
                        .WithMany("FichesAbsence")
                        .HasForeignKey("CodeEnseignant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_Matiere", "Matiere")
                        .WithMany("FichesAbsence")
                        .HasForeignKey("CodeMatiere")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Enseignant");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Absence.Models.T_FicheAbsenceSeance", b =>
                {
                    b.HasOne("Absence.Models.T_FicheAbsence", "FicheAbsence")
                        .WithMany("FichesAbsenceSeances")
                        .HasForeignKey("CodeFicheAbsence")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_Seance", "Seance")
                        .WithMany("FichesAbsenceSeances")
                        .HasForeignKey("CodeSeance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FicheAbsence");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("Absence.Models.T_LigneFicheAbsence", b =>
                {
                    b.HasOne("Absence.Models.T_Etudiant", "Etudiant")
                        .WithMany("LignesFicheAbsence")
                        .HasForeignKey("CodeEtudiant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Absence.Models.T_FicheAbsence", "FicheAbsence")
                        .WithMany("LignesFicheAbsence")
                        .HasForeignKey("CodeFicheAbsence")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("FicheAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_User", b =>
                {
                    b.HasOne("Absence.Models.T_Responsable", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");

                    b.HasOne("Absence.Models.T_Etudiant", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("Absence.Models.T_Enseignant", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Responsable");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Absence.Models.T_Classe", b =>
                {
                    b.Navigation("Etudiants");

                    b.Navigation("FichesAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_Departement", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Enseignants");
                });

            modelBuilder.Entity("Absence.Models.T_Enseignant", b =>
                {
                    b.Navigation("FichesAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_Etudiant", b =>
                {
                    b.Navigation("LignesFicheAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_FicheAbsence", b =>
                {
                    b.Navigation("FichesAbsenceSeances");

                    b.Navigation("LignesFicheAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_Grade", b =>
                {
                    b.Navigation("Enseignants");
                });

            modelBuilder.Entity("Absence.Models.T_Groupe", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Absence.Models.T_Matiere", b =>
                {
                    b.Navigation("FichesAbsence");
                });

            modelBuilder.Entity("Absence.Models.T_Seance", b =>
                {
                    b.Navigation("FichesAbsenceSeances");
                });
#pragma warning restore 612, 618
        }
    }
}
